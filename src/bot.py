#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
–§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram API
"""
from typing import Dict, Any
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command

from src.llm import generate_response
from src.prompts import create_messages_for_llm
from src.memory import add_message, clear_dialog_history
from src.scenarios import handle_start_command, handle_service_inquiry, detect_service_type
from src.styles import STYLE_NORMAL, STYLE_CAT, STYLE_VILLAIN, STYLE_DRAMATIC, set_user_style, reset_user_style

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = None
dp = None

async def init_bot(token: str) -> None:
    """
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±–æ—Ç–∞ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º
    """
    global bot, dp
    bot = Bot(token=token)
    dp = Dispatcher()
    
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    dp.message.register(cmd_start, Command("start"))
    dp.message.register(cmd_style, Command("style"))
    dp.message.register(cmd_normal, Command("normal"))
    dp.message.register(cmd_cat, Command("cat"))
    dp.message.register(cmd_villain, Command("villain"))
    dp.message.register(cmd_dramatic, Command("dramatic"))
    dp.message.register(echo)
    
    logger.info("–ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

async def cmd_start(message: types.Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
    """
    user_id = message.from_user.id
    chat_id = message.chat.id
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –æ–±—ã—á–Ω—ã–π
    reset_user_style(chat_id)
    
    # –ü–æ–ª—É—á–∞–µ–º –º–µ—Ç–∫—É –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ —Å—Ç–∏–ª—è
    style_badge = "üîπ <b>–û–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º</b>"
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ü–µ–Ω–∞—Ä–∏–π –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
    await handle_start_command(message, style_badge=style_badge)

async def echo(message: types.Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    """
    user_id = message.from_user.id
    chat_id = message.chat.id
    user_text = message.text
    
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ: {user_text}")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –Ω–∞–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞
    await bot.send_chat_action(chat_id=chat_id, action="typing")
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —É—Å–ª—É–≥–æ–π
    service_type = detect_service_type(user_text)
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å—Ç–∏–ª–∏
    from src.styles import get_user_style, STYLE_NORMAL, STYLE_CAT, STYLE_VILLAIN, STYLE_DRAMATIC
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∏–ª—å –æ—Ç–≤–µ—Ç–∞
    current_style = get_user_style(chat_id, user_text)
    
    # –¶–≤–µ—Ç–Ω—ã–µ –º–µ—Ç–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å—Ç–∏–ª–µ–π
    style_badges = {
        STYLE_NORMAL: "üîπ <b>–û–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º</b>",
        STYLE_CAT: "üê± <b>–ö–æ—à–∞—á–∏–π —Ä–µ–∂–∏–º</b>",
        STYLE_VILLAIN: "üòà <b>–ó–ª–æ–¥–µ–π—Å–∫–∏–π —Ä–µ–∂–∏–º</b>",
        STYLE_DRAMATIC: "üé≠ <b>–î—Ä–∞–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º</b>"
    }
    
    if service_type:
        # –ï—Å–ª–∏ –æ–ø—Ä–µ–¥–µ–ª–∏–ª–∏ —Ç–∏–ø —É—Å–ª—É–≥–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π
        logger.info(f"–û–ø—Ä–µ–¥–µ–ª–µ–Ω —Ç–∏–ø —É—Å–ª—É–≥–∏: {service_type}")
        await handle_service_inquiry(message, service_type, style_badge=style_badges[current_style])
    else:
        # –ï—Å–ª–∏ —Ç–∏–ø —É—Å–ª—É–≥–∏ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∫ –æ–±—ã—á–Ω—ã–π –∑–∞–ø—Ä–æ—Å
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏—Å—Ç–æ—Ä–∏—é
        add_message(chat_id, "user", user_text)
        
        # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è LLM —Å —É—á–µ—Ç–æ–º –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–∞
        messages = create_messages_for_llm(user_text, chat_id)
        
        # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç LLM
        response = await generate_response(messages)
        
        if response:
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –≤ –æ—Ç–≤–µ—Ç
            from src.scenarios import add_clickable_links
            formatted_response = add_clickable_links(response)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–∫—É —Å—Ç–∏–ª—è –≤ –Ω–∞—á–∞–ª–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            style_badge = style_badges.get(current_style, style_badges[STYLE_NORMAL])
            formatted_response_with_badge = f"{style_badge}\n\n{formatted_response}"
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π HTML-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            await message.answer(formatted_response_with_badge, parse_mode="HTML")
            logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω –æ—Ç–≤–µ—Ç LLM –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id} –≤ —Å—Ç–∏–ª–µ {current_style}")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –≤ –∏—Å—Ç–æ—Ä–∏—é
            add_message(chat_id, "assistant", response)
        else:
            # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç —Å –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π
            from aiogram.utils.markdown import hlink
            contact_link = hlink("–æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É", "https://t.me/manager_technoservice")
            error_message = f"{style_badges[STYLE_NORMAL]}\n\n–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ {contact_link}."
            await message.answer(error_message, parse_mode="HTML")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –≤ –∏—Å—Ç–æ—Ä–∏—é (–±–µ–∑ HTML-—Ç–µ–≥–æ–≤)
            add_message(chat_id, "assistant", "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É.")
            
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞ –æ—Ç LLM –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")

async def cmd_style(message: types.Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /style - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å—Ç–∏–ª—è—Ö
    """
    user_id = message.from_user.id
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–ø—Ä–æ—Å–∏–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç–∏–ª—è—Ö")
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å—Ç–∏–ª—è—Ö
    style_info = (
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç–∏–ª–∏ –æ–±—â–µ–Ω–∏—è:\n\n"
        "üîπ /normal - –û–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º\n"
        "üê± /cat - –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫ —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –Ω–∞ –∫–æ—à–∞—á–∏–π\n"
        "üòà /villain - –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫ –Ω–∞ —è–∑—ã–∫ —Å—É–ø–µ—Ä–∑–ª–æ–¥–µ–µ–≤\n"
        "üé≠ /dramatic - –î—Ä–∞–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –ø–∏—Å–∞—Ç–µ–ª—å\n\n"
        "–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å—Ç–æ —É–ø–æ–º—è–Ω—É—Ç—å —Å—Ç–∏–ª—å –≤ —Å–≤–æ—ë–º —Å–æ–æ–±—â–µ–Ω–∏–∏, "
        "–∏ –±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—Å—è –Ω–∞ –Ω–µ–≥–æ. –ù–∞–ø—Ä–∏–º–µ—Ä: \"–†–∞—Å—Å–∫–∞–∂–∏ –æ –±–∞–∑–∞—Ö –¥–∞–Ω–Ω—ã—Ö –∫–∞–∫ –∫–æ—Ç\""
    )
    
    await message.answer(style_info)

async def cmd_normal(message: types.Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /normal - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ–±—ã—á–Ω—ã–π —Å—Ç–∏–ª—å
    """
    user_id = message.from_user.id
    chat_id = message.chat.id
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –≤—ã–±—Ä–∞–ª –æ–±—ã—á–Ω—ã–π —Å—Ç–∏–ª—å")
    
    set_user_style(chat_id, STYLE_NORMAL)
    await message.answer("–í—ã–±—Ä–∞–Ω –æ–±—ã—á–Ω—ã–π —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è.")

async def cmd_cat(message: types.Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /cat - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ—à–∞—á–∏–π —Å—Ç–∏–ª—å
    """
    user_id = message.from_user.id
    chat_id = message.chat.id
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –≤—ã–±—Ä–∞–ª –∫–æ—à–∞—á–∏–π —Å—Ç–∏–ª—å")
    
    set_user_style(chat_id, STYLE_CAT)
    await message.answer("–ú—è—É! –í—ã–±—Ä–∞–Ω –∫–æ—à–∞—á–∏–π —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è. –ú—Ä—Ä—Ä... üê±")

async def cmd_villain(message: types.Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /villain - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å—Ç–∏–ª—å —Å—É–ø–µ—Ä–∑–ª–æ–¥–µ—è
    """
    user_id = message.from_user.id
    chat_id = message.chat.id
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –≤—ã–±—Ä–∞–ª —Å—Ç–∏–ª—å —Å—É–ø–µ—Ä–∑–ª–æ–¥–µ—è")
    
    set_user_style(chat_id, STYLE_VILLAIN)
    await message.answer("–ú–£–ê–•–ê–•–ê! –í—ã–±—Ä–∞–Ω –ó–õ–û–î–ï–ô–°–ö–ò–ô —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è! –¢–µ–ø–µ—Ä—å –≤—ã –≤ –º–æ–µ–π –í–õ–ê–°–¢–ò! üòà")

async def cmd_dramatic(message: types.Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /dramatic - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –¥—Ä–∞–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å—Ç–∏–ª—å
    """
    user_id = message.from_user.id
    chat_id = message.chat.id
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –≤—ã–±—Ä–∞–ª –¥—Ä–∞–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å—Ç–∏–ª—å")
    
    set_user_style(chat_id, STYLE_DRAMATIC)
    await message.answer("–û, –±–ª–∞–≥–æ—Ä–æ–¥–Ω—ã–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫! –í—ã –∏–∑–±—Ä–∞–ª–∏ –≠–ü–ò–ß–ï–°–ö–ò–ô –∏ –î–†–ê–ú–ê–¢–ò–ß–ï–°–ö–ò–ô —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è! –î–∞ –Ω–∞—á–Ω–µ—Ç—Å—è –Ω–∞—à–∞ –í–ï–õ–ò–ß–ï–°–¢–í–ï–ù–ù–ê–Ø –±–µ—Å–µ–¥–∞! üé≠")

async def start_polling() -> None:
    """
    –ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ polling
    """
    if bot is None or dp is None:
        raise RuntimeError("–ë–æ—Ç –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –í—ã–∑–æ–≤–∏—Ç–µ init_bot() —Å–Ω–∞—á–∞–ª–∞.")
    
    logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ polling")
    await dp.start_polling(bot)